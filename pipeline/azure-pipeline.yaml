  
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'ubuntu-latest'
trigger:
- master

steps:

- task: DownloadSecureFile@1
  name: github_docker
  inputs:
    secureFile: 'github-docker.txt'

- task: Npm@1
  displayName: Npm install
  inputs:
    command: 'install'
- task: Npm@1
  displayName: Npm build
  inputs:
    command: 'custom'
    customCommand: 'run build'

- task: PowerShell@2
  displayName: Docker login
  inputs:
    targetType: 'inline'
    script: |
      cat $(github_docker.secureFilePath)| docker login docker.pkg.github.com -u bryht --password-stdin

- task: PowerShell@2
  displayName: Docker Build
  inputs:
    targetType: 'inline'
    script: |
      docker build -t docker.pkg.github.com/bryht/video-chat-game/video-chat-game:latest .

- task: PowerShell@2
  displayName: Docker Push
  inputs:
    targetType: 'inline'
    script: |
      docker push docker.pkg.github.com/bryht/video-chat-game/video-chat-game:latest

- task: PowerShell@2
  displayName: Docker Build Server
  inputs:
    targetType: 'inline'
    script: |
      docker build -t docker.pkg.github.com/bryht/video-chat-game/video-chat-game-server:latest -f server.Dockerfile .

- task: PowerShell@2
  displayName: Docker Push Server
  inputs:
    targetType: 'inline'
    script: |
      docker push docker.pkg.github.com/bryht/video-chat-game/video-chat-game-server:latest

- task: SSH@0
  inputs:
    sshEndpoint: 'linux-ming'
    runOptions: 'inline'
    failOnStdErr: false
    inline: |
      cd ./video-chat-game/
      git stash
      git pull
      cd ./deploy
      chmod 777 reload.sh
      ./reload.sh
      cd ~
      ./clean.sh
    readyTimeout: '200000'